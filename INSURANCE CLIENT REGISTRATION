IDENTIFICATION DIVISION.
PROGRAM-ID. CLIENT-REGISTRATION.
AUTHOR. ALINA Z.
DATE-WRITTEN. 18.04.2025

*This COBOL program registers a new insurance client. It validates the clientâ€™s age and policy type, and confirms*
*the registration if data is correct.*

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.

DATA DIVISION.
WORKING-STORAGE SECTION.

77 CLIENT-NAME     PIC A(30).
77 CLIENT-AGE      PIC 99.
77 POLICY-NUMBER   PIC X(10).
77 POLICY-TYPE     PIC X.         *> A = Life, B = Health, C = Auto
77 VALID-ENTRY     PIC X VALUE 'Y'.
77 CONTINUE-FLAG   PIC X VALUE 'Y'.

PROCEDURE DIVISION.

MAIN-LOGIC.
 DISPLAY " INSURANCE CLIENT REGISTRATION".
PERFORM UNTIL CONTINUE-FLAG NOT = 'Y'
  PERFORM GET-CLIENT-DATA
  PERFORM VALIDATE-DATA
  IF VALID-ENTRY = 'Y'
  PERFORM CONFIRM-REGISTRATION
ELSE
  DISPLAY " Registration failed. Invalid data. "
  END-IF
  PERFORM ASK-CONTINUE
END-PERFORM.
DISPLAY "Session ended. Thank you!".
STOP RUN.

GET-CLIENT-DATA.
 DISPLAY "Enter client name:".
 ACCEPT CLIENT-NAME.
 DISPLAY "Enter client age:".
 ACCEPT CLIENT-AGE.
 DISPLAY "Enter policy number:".
 ACCEPT POLICY-NUMBER.
 DISPLAY "Enter policy type (A=Life, B=Health, C=Auto): ".
 ACCEPT POLICY-TYPE.

VALIDATE-DATA.
 MOVE 'Y' TO VALID-ENTRY.
 IF CLIENT-AGE < 18 OR CLIENT-AGE > 100
 DISPLAY "Invalid age. Must be 18-100."
 MOVE 'N' TO VALID-ENTRY
END-IF
IF NOT (POLICY-TYPE = 'A' OR POLICY-TYPE = 'B; OR POLICY-TYPE = 'C')
 DISPLAY "Invalid policy type. Use A, B, or C."
 MOVE  'N' TO VALID-ENTRY
END-IF.

CONFIRM-REGISTRATION.
DISPLAY "Client successfully registered!".
DISPLAY "Name:" CLIENT-NAME.
DISPLAY "Age:" CLIENT-AGE.
DISPLAY "Policy No.:" POLICY-NUMBER.
DISPLAY "Policy Type:" POLICY-TYPE.

ASK-CONTINUE.
DISPLAY "Do you want to register another client? (Y/N):".
ACCEPT CONTINUE-FLAG.
MOVE FUNCTION UPPER-CASE (CONTINUE-FLAG) TO CONTINUE-FLAG.
